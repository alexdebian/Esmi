# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-12 13:31
from __future__ import unicode_literals

import ckeditor_uploader.fields
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import esmiapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(max_length=250)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('woman', 'woman'), ('man', 'man')], help_text='Выберите пол', max_length=5)),
                ('phonenumber', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('index', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('house', models.CharField(blank=True, max_length=6, null=True)),
                ('apartment', models.CharField(blank=True, max_length=6, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EsmiAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'authors',
                'db_table': 'esmi_authors',
                'verbose_name_plural': 'authors',
            },
        ),
        migrations.CreateModel(
            name='EsmiEditionNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editionname_ru', models.CharField(max_length=256, null=True)),
                ('editionname_en', models.CharField(max_length=256, null=True)),
                ('editionname_url', models.CharField(blank=True, max_length=256, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'edition name',
                'db_table': 'esmi_editionnames',
                'verbose_name_plural': 'edition name',
            },
        ),
        migrations.CreateModel(
            name='EsmiEditionTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editiontype_ru', models.CharField(max_length=256, null=True)),
                ('editiontype_en', models.CharField(max_length=256, null=True)),
            ],
            options={
                'verbose_name': 'edition type',
                'db_table': 'esmi_editiontypes',
                'verbose_name_plural': 'edition type',
            },
        ),
        migrations.CreateModel(
            name='EsmiIndexLevel1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexlevel1', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'Index 1',
                'db_table': 'esmi_IndexLevel1',
                'verbose_name_plural': 'Index 1',
            },
        ),
        migrations.CreateModel(
            name='EsmiIndexLevel2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexlevel2ru', models.CharField(max_length=256)),
                ('indexlevel2en', models.CharField(max_length=256)),
                ('indexlevel2url', models.CharField(max_length=256, null=True)),
                ('indexlevel1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIndexLevel1')),
            ],
            options={
                'verbose_name': 'Index 2',
                'db_table': 'esmi_IndexLevel2',
                'verbose_name_plural': 'Index 2',
            },
        ),
        migrations.CreateModel(
            name='EsmiIsLikedIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EsmiIsPayedIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=16)),
                ('date', models.DateField(blank=True, default=datetime.date.today)),
            ],
            options={
                'db_table': 'esmi_payedissue',
            },
        ),
        migrations.CreateModel(
            name='EsmiIssueprices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=16)),
            ],
            options={
                'verbose_name': 'esmi_issueprices',
                'db_table': 'esmi_issueprices',
                'verbose_name_plural': 'esmi_issueprices',
            },
        ),
        migrations.CreateModel(
            name='EsmiIssues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('throughnumber', models.IntegerField()),
                ('dateissues', models.DateField()),
                ('dateload', models.DateTimeField(null=True)),
                ('filefree', models.FileField(null=True, upload_to=esmiapp.models.EsmiIssues.get_saving_path)),
                ('fileprivate', models.FileField(null=True, upload_to=esmiapp.models.EsmiIssues.get_saving_path)),
                ('previewissue', models.ImageField(null=True, upload_to=esmiapp.models.EsmiIssues.get_saving_path)),
                ('idnameedition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiEditionNames')),
            ],
            options={
                'verbose_name': 'issues',
                'db_table': 'esmi_issues',
                'verbose_name_plural': 'issues',
            },
        ),
        migrations.CreateModel(
            name='EsmiNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_tags', models.CharField(blank=True, max_length=256)),
                ('meta_description', models.CharField(blank=True, max_length=256)),
                ('header', models.CharField(blank=True, max_length=256)),
                ('picture', models.ImageField(blank=True, max_length=256, upload_to='')),
                ('pct_description', models.CharField(blank=True, max_length=256)),
                ('alt', models.CharField(blank=True, max_length=256)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('body_free', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('body_close', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('data_create', models.DateTimeField(blank=True)),
                ('data_publication', models.DateTimeField(blank=True)),
                ('typeartical', models.CharField(choices=[('c', 'close'), ('f', 'free')], help_text='Тип материала', max_length=1)),
                ('idauthor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiAuthors', verbose_name='author')),
                ('idindexlevel2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIndexLevel2')),
                ('idissue', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIssues')),
            ],
            options={
                'verbose_name': 'News',
                'db_table': 'esmi_news',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='EsmiNewsTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newstype', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'esmi_newstype',
            },
        ),
        migrations.CreateModel(
            name='EsmiPublishers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'esmi_publishers',
            },
        ),
        migrations.CreateModel(
            name='EsmiTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=256, unique=True)),
                ('tag_url', models.CharField(max_length=256, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'tag',
                'db_table': 'esmi_tags',
                'verbose_name_plural': 'tag',
            },
        ),
        migrations.AddField(
            model_name='esminews',
            name='newstype',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiNewsTypes'),
        ),
        migrations.AddField(
            model_name='esminews',
            name='tags',
            field=models.ManyToManyField(blank=True, to='esmiapp.EsmiTags'),
        ),
        migrations.AddField(
            model_name='esmiissueprices',
            name='idissue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIssues'),
        ),
        migrations.AddField(
            model_name='esmiispayedissue',
            name='idissue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIssues'),
        ),
        migrations.AddField(
            model_name='esmiispayedissue',
            name='iduser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='esmiislikedissue',
            name='idissue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIssues'),
        ),
        migrations.AddField(
            model_name='esmiislikedissue',
            name='iduser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='esmieditionnames',
            name='ideditiontype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiEditionTypes'),
        ),
        migrations.AddField(
            model_name='esmieditionnames',
            name='idindexlevel2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiIndexLevel2'),
        ),
        migrations.AddField(
            model_name='esmieditionnames',
            name='idpublisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='esmiapp.EsmiPublishers'),
        ),
    ]
